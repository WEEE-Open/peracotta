"""
Python package `peracotta` provides a program intended to gather hardware data, display it and upload it to [T.A.R.A.L.L.O.](https://github.com/weee-open/tarallo).

The following documentation is intended for future mantainers and developers working on peracotta, and doesn't aim to be a clean easy-to-use user guide, although it may still prove useful in that sense.

Docs are automatically generated by [`pdoc3`](https://pdoc3.github.io/) using docstrings (following [PEP 257](https://peps.python.org/pep-0257/) conventions).

## Packaging
The packaging is done using [`pyproject.toml`](https://packaging.python.org/en/latest/guides/writing-pyproject-toml/) and [`setuptools`](https://setuptools.pypa.io/en/latest/)

Even if you're not familiar with this setup, simply reading the `pyproject.toml` file should be pretty self-explanatory.
Some interesting properties are:

 - **[project.scripts]** define commands that will be installed in the system (usually in ~/.local/bin, make sure it's in PATH) and what functions in the package they should call.
 - **[project.gui-scripts]** same thing but for commands that start a GUI.
 - **[tool.setuptools.package-data]** by default, only .py files are included in the built package. This property allows including useful data files such as assets and scripts. Find more info [here](https://setuptools.pypa.io/en/latest/userguide/datafiles.html#package-data).
"""
import signal
import sys

from PyQt6 import QtWidgets

from . import peracruda
from .commons import env_to_bool
from .config import CONFIG
from .constants import VERSION
from .gui import GUI, gui_excepthook, errored
from .peralog import logdir, logger
from .reporter import send_report


def parse_common_args():
    """Parse arguments common to both GUI and CLI version
    --version prints the current version and quits.
    --logs prints the path where logs are stored and quits.
    """
    if any([s in sys.argv for s in ["--version", "-v"]]):
        print(f"P.E.R.A.C.O.T.T.A. Version {VERSION}")
        exit(0)

    if "--logs" in sys.argv:
        print(f"P.E.R.A.C.O.T.T.A.'s logs are located in {logdir.as_posix()}")
        exit(0)


def main_gui():
    """Entrypoint for the GUI version."""
    parse_common_args()

    sys.excepthook = gui_excepthook
    signal.signal(signal.SIGINT, signal.SIG_DFL)  # makes CTRL+ C work

    app = QtWidgets.QApplication(sys.argv)

    # noinspection PyUnusedLocal
    window = GUI(app)
    app.exec()

    if CONFIG["AUTOMATIC_REPORT_ERRORS"] and errored():
        try:
            send_report()
        except Exception:
            pass


def main_cli():
    """.. todo::Entrypoint for the CLI version"""
    print("Sorry, peracruda isn't implemented in v2 yet! Use the old one at https://github.com/WEEE-Open/peracotta")
    parse_common_args()
    # peracruda.main_()
